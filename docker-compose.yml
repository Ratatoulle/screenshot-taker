version: '3.8'

services:
  http_api:
    container_name: http_api
    depends_on:
      - postgres_db
      - selenium
      - minio
    ports:
      - "80:80"
    build:
      dockerfile: ./http_api/Dockerfile
    environment:
      - MINIO_HTTP=minio
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - SE_HOST=selenium
      - DB_HOST=pgdb
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    restart: on-failure
    command:
      python3 http_api/main.py

  selenium:
    container_name: selenium
    image: selenium/standalone-chrome:latest
    shm_size: 2gb
    ports:
      - "4444:4444"
    restart: always

  minio:
    container_name: minio
    image: 'minio/minio:latest'
    ports:
      - "9000:9000"
      - "9001:9001"
    expose:
      - "9000"
    environment:
      - MINIO_HTTP=${MINIO_HTTP}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"


  postgres_db:
    image: postgres:latest
    container_name: pgdb
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - "./dump/:/docker-entrypoint-initdb.d/"
      - screenshot_db_data:/var/lib/postgresql/data

volumes:
  screenshot_db_data:

  minio_data: